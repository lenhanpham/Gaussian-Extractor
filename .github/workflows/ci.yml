build-and-deploy-docs:
  runs-on: ubuntu-latest
  needs: build-and-test
  permissions:
    contents: read
    pages: write
    id-token: write
  environment:
    name: github-pages
    url: ${{ steps.deployment.outputs.page_url }}
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('docs/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r docs/requirements.txt

    - name: Install Doxygen and Graphviz
      run: |
        sudo apt-get update
        sudo apt-get install -y doxygen graphviz

    - name: Generate Doxygen XML and HTML
      run: |
        doxygen Doxyfile
        if [ ! -d "docs/xml" ]; then
          echo "Error: Doxygen XML generation failed: docs/xml/ directory not found."
          exit 1
        fi
        if [ ! -d "docs/html" ]; then
          echo "Warning: Doxygen HTML directory (docs/html/) not found."
        fi

    - name: Verify Doxygen XML Output
      run: |
        if [ -z "$(ls -A docs/xml/)" ]; then
          echo "Error: Doxygen XML directory (docs/xml/) is empty."
          exit 1
        fi
        echo "Doxygen XML files generated successfully."

    - name: Verify api.rst Generation
      working-directory: docs
      run: |
        if [ ! -f "api/api.rst" ]; then
          echo "Error: api.rst not generated in docs/api/."
          exit 1
        fi
        echo "api.rst generated successfully."

    - name: Build Sphinx HTML
      working-directory: docs
      run: |
        mkdir -p _static _templates
        cp -r ../docs/html/*.svg _static/ && echo "SVGs copied to _static/" || echo "No SVGs found in docs/html/, continuing"
        make html -W --keep-going 2> build_warnings.log || true
        if [ -s build_warnings.log ]; then
          echo "Warnings during Sphinx HTML build:"
          cat build_warnings.log
        fi
        if [ ! -d "_build/html" ]; then
          echo "Error: HTML generation failed: _build/html/ directory not found."
          exit 1
        fi
        if [ ! -f "_build/html/api.html" ]; then
          echo "Error: API documentation (api.html) not generated."
          exit 1
        fi
        echo "Sphinx HTML build completed successfully."

    - name: Build Sphinx Markdown
      working-directory: docs
      run: |
        sphinx-build -b markdown . _build/markdown -W --keep-going || echo "Markdown build failed, continuing"
        if [ -d "_build/markdown" ] && [ -z "$(ls -A _build/markdown)" ]; then
          rm -rf _build/markdown
          echo "Markdown directory was empty and removed"
        fi

    - name: Upload Documentation Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: |
          docs/_build/html/
          docs/_build/markdown/
          docs/html/
        if-no-files-found: warn

    - name: Configure GitHub Pages
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4

    - name: Upload GitHub Pages Artifact
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/_build/html/

    - name: Deploy to GitHub Pages
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Log GitHub Pages URL
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        echo "Deployed documentation to ${{ steps.deployment.outputs.page_url }}"