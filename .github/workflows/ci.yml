name: CI/CD for Gaussian Extractor

on:
  push:
    branches: [main, develop, dev]
  pull_request:
    branches: [main, develop, dev]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ make cmake clang-tidy

      - name: Configure CMake
        run: |
          cmake -S . -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          if [ $? -ne 0 ]; then
            echo "CMake configuration failed. Please check your CMakeLists.txt for errors."
            exit 1
          fi

      - name: Static Analysis
        run: clang-tidy -p build src/main.cpp src/core/gaussian_extractor.cpp src/core/job_scheduler.cpp

      - name: Build the project
        run: |
          cmake --build build
          if [ $? -ne 0 ]; then
            echo "Build failed. Please check the compilation errors above."
            exit 1
          fi

      - name: Prepare test data
        run: |
          cp tests/data/*.log .
          cp tests/extract-xyz/*.log tests/extract-xyz/*.LOG tests/extract-xyz/*.Log tests/extract-xyz/*.out tests/extract-xyz/*.OUT .
          cp tests/create-input/*.xyz .

      - name: Run Tests
        id: run_tests
        run: |
          # Try both possible binary locations
          if [ -f "./build/bin/gaussian_extractor.x" ]; then
            BINARY="./build/bin/gaussian_extractor.x"
          elif [ -f "./build/gaussian_extractor.x" ]; then
            BINARY="./build/gaussian_extractor.x"
          elif [ -f "./gaussian_extractor.x" ]; then
            BINARY="./gaussian_extractor.x"
          else
            echo "Test failed: gaussian_extractor.x binary not found."
            exit 1
          fi
          $BINARY -q -f csv
          if ! ls *.csv >/dev/null 2>&1; then
            echo "Test failed: No .csv file generated."
            exit 1
          fi
          csv_file=$(ls *.csv | head -n 1)
          if [ ! -s "$csv_file" ]; then
            echo "Test failed: $csv_file is empty."
            exit 1
          fi
          echo "Basic extraction tests passed."

      - name: Test Coordinate Extraction (xyz)
        run: |
          # same script as before ...

      - name: Test Create Input (ci)
        run: |
          # same script as before ...

      - name: Test Parameter Template Generation
        run: |
          # same script as before ...

      - name: Test Parameter File Loading
        run: |
          # same script as before ...

      - name: Process log and out files
        if: success() || steps.run_tests.conclusion == 'success'
        run: |
          # same script as before ...

      - name: Upload results artifact
        uses: actions/upload-artifact@v4
        with:
          name: gaussian-results
          path: |
            *.results
            *.csv
            *.xyz
            *.gau
            *.params
            test_templates/
            gaussian-extractor_*_coord/
        if: always()

      - name: Display results
        run: |
          # same script as before ...
        if: always()

      - name: Cleanup test files
        run: |
          rm -f *.log *.out *.LOG *.Log *.OUT *.xyz *.gau *.params *.results *.csv
          rm -rf test_templates gaussian-extractor_*_coord
        if: always()
